variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs/client"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

stages:
  - test
  - deploy
  - coverage

test:
  stage: test
  image: docker:latest
  services:
    - docker:20.10-dind
  script:
    - docker build .

publish:
  image: curlimages/curl:latest
  stage: deploy
  only:
    - develop
    - master
  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  script:
    - version=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - insecure=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - response=$(curl -s -w "\n%{http_code}" $insecure --data $version $URL)
    - code=$(echo "$response" | tail -n 1)
    - body=$(echo "$response" | head -n 1)
    # Output state information
    - if [ $code -eq 201 ]; then
        echo "Package created - Code $code - $body";
      else
        echo "Could not create package - Code $code - $body";
        exit 1;
      fi

push-to-github:
  image: alpine:3.6
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - apk add --no-cache bash git openssh-client
    - mkdir -p ~/.ssh
    - cp $GITHUB_PUSH_SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan "github.com" >> ~/.ssh/known_hosts
    - git push git@github.com:PayGreen/paygreen-php.git ${CI_COMMIT_SHA:-HEAD}:refs/heads/master --force --tags

push-coverage-badge:
  image: alpine:3.6
  stage: test
  script:
    - apk add --no-cache bash git openssh-client
    - mkdir -p ~/.ssh
    - cp $GITLAB_CDN_PUSH_SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan "gitlab.com" >> ~/.ssh/known_hosts
    - git clone git@gitlab.com:Paygreen-paygreen/gcp/cloud-storage/pg-production-cdn.git
    - git config --global user.email "dev-module@paygreen.fr"
    - git config --global user.name "Team Modules"
    - cd pg-production-cdn
    - mkdir -p badge
    - wget "https://gitlab.com/Paygreen-paygreen/integration/sdk-php/badges/master/coverage.svg" > badge/paygreen-php-master.svg
    - git add badge/paygreen-php-master.svg
    - git commit -m "Update paygreen-php coverage badge"
    - git push

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml